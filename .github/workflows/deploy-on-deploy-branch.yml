name: Deploy on deploy branch

# D√©clenche uniquement sur push vers la branche deploy
on:
  push:
    branches: [deploy]
  pull_request:
    branches: [deploy]
    types: [closed]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: üèÅ Start deployment
        run: |
          echo "üöÄ D√©but du d√©ploiement automatique"
          echo "üìù Commit: ${{ github.sha }}"
          echo "üë§ Auteur: ${{ github.actor }}"

      - name: üì• Checkout repository
        uses: actions/checkout@v4
        with:
          ref: deploy

      - name: üì¶ Create deployment archive
        run: |
          echo "üì¶ Cr√©ation de l'archive de d√©ploiement..."
          # Cr√©er un fichier .tarignore pour les exclusions
          cat > .tarignore << EOF
          .git
          node_modules
          .history
          .DS_Store
          *.tar.gz
          *.log
          .github/workflows
          EOF

          # Cr√©er l'archive en excluant les fichiers list√©s
          tar -czf /tmp/projet5iw-deploy.tar.gz \
            --exclude-from=.tarignore \
            --exclude='.tarignore' \
            .

          # D√©placer l'archive et nettoyer
          mv /tmp/projet5iw-deploy.tar.gz ./projet5iw-deploy.tar.gz
          rm -f .tarignore

          echo "‚úÖ Archive cr√©√©e :"
          ls -lh projet5iw-deploy.tar.gz

      - name: üì§ Transfer and deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.MGR_HOST }}
          username: ${{ secrets.MGR_SSH_USER }}
          key: ${{ secrets.MGR_SSH_KEY }}
          port: ${{ secrets.MGR_SSH_PORT || 22 }}
          script: |
            set -euo pipefail

            echo "üìÇ Pr√©paration du r√©pertoire de d√©ploiement..."
            mkdir -p /tmp/projet5iw-deploy
            cd /tmp/projet5iw-deploy

      - name: üìÅ Upload code archive
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.MGR_HOST }}
          username: ${{ secrets.MGR_SSH_USER }}
          key: ${{ secrets.MGR_SSH_KEY }}
          port: ${{ secrets.MGR_SSH_PORT || 22 }}
          source: "projet5iw-deploy.tar.gz"
          target: "/tmp/"

      - name: üöÄ Deploy to production
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.MGR_HOST }}
          username: ${{ secrets.MGR_SSH_USER }}
          key: ${{ secrets.MGR_SSH_KEY }}
          port: ${{ secrets.MGR_SSH_PORT || 22 }}
          command_timeout: 30m
          script: |
            set -euo pipefail

            echo "üì¶ Extraction de l'archive..."
            cd /tmp
            tar -xzf projet5iw-deploy.tar.gz -C projet5iw-deploy

            echo "üîÑ Sauvegarde de l'ancien d√©ploiement..."
            if [ -d "/home/github/projet5iw" ]; then
              cp -r /home/github/projet5iw /home/github/projet5iw.backup.$(date +%Y%m%d_%H%M%S) 2>/dev/null || echo "‚ö†Ô∏è  Impossible de sauvegarder (permissions)"
            fi

            echo "üìÇ Mise √† jour du code..."
            mkdir -p /home/github 2>/dev/null || echo "üìÇ R√©pertoire /home/github existe d√©j√†"
            rm -rf /home/github/projet5iw 2>/dev/null || echo "üßπ Nettoyage de l'ancien code..."
            mv /tmp/projet5iw-deploy /home/github/projet5iw

            echo "üîç V√©rification de l'√©tat du Swarm..."
            docker node ls

            echo "üìã Contenu du r√©pertoire avant chmod :"
            ls -al
            find . -maxdepth 2 -type f -name '*deploy*.sh' || echo "‚ö†Ô∏è Aucun script trouv√©"

            echo "üèóÔ∏è Lancement du processus de build et d√©ploiement..."
            # ===> Vos chmod et ex√©cution apr√®s ce point <===
            chmod +x ./build-deploy.sh ./cleanup.sh
            ./build-deploy.sh

            echo "üèóÔ∏è Lancement du processus de build et d√©ploiement..."
            cd /home/github/projet5iw
            chmod +x ./build-deploy.sh ./cleanup.sh
            ./build-deploy.sh

            echo "‚úÖ V√©rification du d√©ploiement..."
            sleep 10
            docker stack services projet5iw

            echo "üßπ Nettoyage des fichiers temporaires..."
            rm -f /tmp/projet5iw-deploy.tar.gz

            echo "üéâ D√©ploiement termin√© avec succ√®s !"

      - name: üìä Deployment Summary
        if: always()
        run: |
          echo "## üìà R√©sum√© du D√©ploiement" >> $GITHUB_STEP_SUMMARY
          echo "- **Branche**: deploy" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Auteur**: ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Statut**: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
          echo "- **URL**: https://educareschool.me" >> $GITHUB_STEP_SUMMARY
