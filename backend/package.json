{
  "name": "backend",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "test:blog": "jest --testPathPattern=\"blog.*spec\" --verbose",
    "test:blog:cov": "jest --coverage --testPathPattern=\"blog.*spec\"",
    "test:blog:e2e": "jest --config ./test/jest-e2e.json --testPathPattern=\"blog.*e2e-spec\"",
    "test:blog:all": "npm run test:blog && npm run test:blog:e2e",
    "test:auth": "jest --testPathPattern=\"auth.*spec\" --verbose",
    "test:auth:cov": "jest --coverage --testPathPattern=\"auth.*spec\"",
    "test:auth:e2e": "jest --config ./test/jest-e2e.json --testPathPattern=\"auth.*e2e-spec\"",
    "test:auth:all": "npm run test:auth && npm run test:auth:e2e",
    "test:staff": "jest --testPathPattern=\"staff.*spec\" --verbose",
    "test:staff:cov": "jest --coverage --testPathPattern=\"staff.*spec\"",
    "test:staff:e2e": "jest --config ./test/jest-e2e.json --testPathPattern=\"staff.*e2e-spec\"",
    "test:staff:all": "npm run test:staff && npm run test:staff:e2e",
    "test:secretary": "jest --testPathPattern=\"secretary.*spec\" --verbose",
    "test:secretary:cov": "jest --coverage --testPathPattern=\"secretary.*spec\"",
    "test:secretary:e2e": "jest --config ./test/jest-e2e.json --testPathPattern=\"secretary.*e2e-spec\"",
    "test:secretary:all": "npm run test:secretary && npm run test:secretary:e2e",
    "test:director": "jest --testPathPattern=\"director.*spec\" --verbose",
    "test:director:cov": "jest --coverage --testPathPattern=\"director.*spec\"",
    "test:director:e2e": "jest --config ./test/jest-e2e.json --testPathPattern=\"director.*e2e-spec\"",
    "test:director:all": "npm run test:director && npm run test:director:e2e",
    "test:parent": "jest --testPathPattern=\"parent.*spec\" --verbose",
    "test:parent:cov": "jest --coverage --testPathPattern=\"parent.*spec\"",
    "test:parent:e2e": "jest --config ./test/jest-e2e.json --testPathPattern=\"parent.*e2e-spec\"",
    "test:parent:all": "npm run test:parent && npm run test:parent:e2e",
    "test:child": "jest --testPathPattern=\"child.*spec\" --verbose",
    "test:child:cov": "jest --coverage --testPathPattern=\"child.*spec\"",
    "test:child:e2e": "jest --config ./test/jest-e2e.json --testPathPattern=\"child.*e2e-spec\"",
    "test:child:all": "npm run test:child && npm run test:child:e2e",
    "test:service-manager": "jest --testPathPattern=\"service-manager.*spec\" --verbose",
    "test:service-manager:cov": "jest --coverage --testPathPattern=\"service-manager.*spec\"",
    "test:service-manager:e2e": "jest --config ./test/jest-e2e.json --testPathPattern=\"service-manager.*e2e-spec\"",
    "test:service-manager:all": "npm run test:service-manager && npm run test:service-manager:e2e",
    "test:planning": "jest --testPathPattern=\"planning.*spec\" --verbose",
    "test:planning:cov": "jest --coverage --testPathPattern=\"planning.*spec\"",
    "test:planning:e2e": "jest --config ./test/jest-e2e.json --testPathPattern=\"planning.*e2e-spec\"",
    "test:planning:all": "npm run test:planning && npm run test:planning:e2e",
    "test:event": "jest --testPathPattern=\"event.*spec\" --verbose",
    "test:event:cov": "jest --coverage --testPathPattern=\"event.*spec\"",
    "test:event:e2e": "jest --config ./test/jest-e2e.json --testPathPattern=\"event.*e2e-spec\"",
    "test:event:all": "npm run test:event && npm run test:event:e2e",
    "test:chat": "jest --testPathPattern=\"chat.*spec\" --verbose",
    "test:chat:cov": "jest --coverage --testPathPattern=\"chat.*spec\"",
    "test:chat:e2e": "jest --config ./test/jest-e2e.json --testPathPattern=\"chat.*e2e-spec\"",
    "test:chat:all": "npm run test:chat && npm run test:chat:e2e",
    "test:journal": "jest --testPathPattern=\"journal.*spec\" --verbose",
    "test:journal:cov": "jest --coverage --testPathPattern=\"journal.*spec\"",
    "test:journal:e2e": "jest --config ./test/jest-e2e.json --testPathPattern=\"journal.*e2e-spec\"",
    "test:journal:all": "npm run test:journal && npm run test:journal:e2e",
    "test:presence": "jest --testPathPattern=\"presence.*spec\" --verbose",
    "test:presence:cov": "jest --coverage --testPathPattern=\"presence.*spec\"",
    "test:presence:e2e": "jest --config ./test/jest-e2e.json --testPathPattern=\"presence.*e2e-spec\"",
    "test:presence:all": "npm run test:presence && npm run test:presence:e2e",
    "test:all-features": "npm run test:auth:all && npm run test:staff:all && npm run test:secretary:all && npm run test:director:all && npm run test:parent:all && npm run test:child:all && npm run test:service-manager:all && npm run test:planning:all && npm run test:event:all && npm run test:chat:all && npm run test:journal:all && npm run test:presence:all && npm run test:blog:all",
    "test:coverage-all": "jest --coverage --config ./jest.global.config.js",
    "studio": "DATABASE_URL=\"postgresql://myuser:mypassword@localhost:5433/mydb\" npx prisma studio",
    "seed": "ts-node prisma/seed.ts",
    "db:reset": "npx prisma migrate reset --force --skip-generate",
    "reset:seed": "npm run db:reset && npm run seed"
  },
  "prisma": {
    "seed": "ts-node prisma/seed.ts"
  },
  "dependencies": {
    "@faker-js/faker": "^9.8.0",
    "@nestjs/common": "^11.0.1",
    "@nestjs/config": "^4.0.1",
    "@nestjs/core": "^11.0.1",
    "@nestjs/jwt": "^11.0.0",
    "@nestjs/mongoose": "^11.0.3",
    "@nestjs/passport": "^11.0.5",
    "@nestjs/platform-express": "^11.0.1",
    "@nestjs/platform-socket.io": "^11.1.3",
    "@nestjs/schedule": "^6.0.0",
    "@nestjs/swagger": "^11.2.0",
    "@nestjs/throttler": "^6.4.0",
    "@nestjs/typeorm": "^11.0.0",
    "@nestjs/websockets": "^11.1.3",
    "@prisma/client": "^6.5.0",
    "@sendgrid/mail": "^8.1.5",
    "@sentry/nestjs": "^9.19.0",
    "@sentry/node": "^9.38.0",
    "@sentry/profiling-node": "^9.38.0",
    "@types/dompurify": "^3.0.5",
    "@types/uuid": "^10.0.0",
    "bcrypt": "^5.1.1",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.1",
    "cookie-parser": "^1.4.7",
    "csurf": "^1.11.0",
    "date-fns": "^4.1.0",
    "date-holidays": "^3.24.3",
    "dompurify": "^3.2.6",
    "express-rate-limit": "^7.5.0",
    "file-type": "16.5.4",
    "helmet": "^8.1.0",
    "mongoose": "^8.15.1",
    "nodemailer": "^6.10.0",
    "openai": "^5.1.1",
    "passport": "^0.7.0",
    "passport-jwt": "^4.0.1",
    "pg": "^8.14.0",
    "prisma": "^6.5.0",
    "qrcode": "^1.5.4",
    "reflect-metadata": "^0.2.2",
    "rxjs": "^7.8.1",
    "sanitize-html": "^2.17.0",
    "socket.io": "^4.8.1",
    "speakeasy": "^2.0.0",
    "stripe": "^14.24.0",
    "swagger-ui-express": "^5.0.1",
    "typeorm": "^0.3.21",
    "uuid": "^11.1.0",
    "xlsx": "^0.18.5"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3.2.0",
    "@eslint/js": "^9.18.0",
    "@nestjs/cli": "^11.0.0",
    "@nestjs/schematics": "^11.0.0",
    "@nestjs/testing": "^11.0.1",
    "@swc/cli": "^0.6.0",
    "@swc/core": "^1.10.7",
    "@types/bcrypt": "^5.0.2",
    "@types/express": "^5.0.0",
    "@types/jest": "^29.5.14",
    "@types/mongoose": "^5.11.97",
    "@types/multer": "^1.4.12",
    "@types/node": "^22.15.29",
    "@types/passport-jwt": "^4.0.1",
    "@types/sanitize-html": "^2.16.0",
    "@types/supertest": "^6.0.2",
    "eslint": "^9.18.0",
    "eslint-config-prettier": "^10.0.1",
    "eslint-plugin-prettier": "^5.2.2",
    "globals": "^16.0.0",
    "jest": "^29.7.0",
    "prettier": "^3.4.2",
    "source-map-support": "^0.5.21",
    "supertest": "^7.0.0",
    "ts-jest": "^29.2.5",
    "ts-loader": "^9.5.2",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.7.3",
    "typescript-eslint": "^8.20.0"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}
